// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// CCmadeM
Rcpp::List CCmadeM(arma::mat X_train, arma::mat X_test, const arma::colvec& y_train, int chunk, int cc_num);
RcppExport SEXP _CCFM_CCmadeM(SEXP X_trainSEXP, SEXP X_testSEXP, SEXP y_trainSEXP, SEXP chunkSEXP, SEXP cc_numSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X_train(X_trainSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X_test(X_testSEXP);
    Rcpp::traits::input_parameter< const arma::colvec& >::type y_train(y_trainSEXP);
    Rcpp::traits::input_parameter< int >::type chunk(chunkSEXP);
    Rcpp::traits::input_parameter< int >::type cc_num(cc_numSEXP);
    rcpp_result_gen = Rcpp::wrap(CCmadeM(X_train, X_test, y_train, chunk, cc_num));
    return rcpp_result_gen;
END_RCPP
}
// CCmadeBM
Rcpp::List CCmadeBM(SEXP bX_train, SEXP bX_test, arma::colvec by_train, int chunk, int cc_num);
RcppExport SEXP _CCFM_CCmadeBM(SEXP bX_trainSEXP, SEXP bX_testSEXP, SEXP by_trainSEXP, SEXP chunkSEXP, SEXP cc_numSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type bX_train(bX_trainSEXP);
    Rcpp::traits::input_parameter< SEXP >::type bX_test(bX_testSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type by_train(by_trainSEXP);
    Rcpp::traits::input_parameter< int >::type chunk(chunkSEXP);
    Rcpp::traits::input_parameter< int >::type cc_num(cc_numSEXP);
    rcpp_result_gen = Rcpp::wrap(CCmadeBM(bX_train, bX_test, by_train, chunk, cc_num));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_CCFM_CCmadeM", (DL_FUNC) &_CCFM_CCmadeM, 5},
    {"_CCFM_CCmadeBM", (DL_FUNC) &_CCFM_CCmadeBM, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_CCFM(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
